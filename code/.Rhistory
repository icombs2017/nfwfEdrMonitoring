mutate(p.value = replace(p.value, p.value >= 0.05, "ns")) %>%
mutate(p.value = replace(p.value, p.value < 0.001, "< 0.001")) %>%
mutate_if(is.character, str_replace_all, pattern = "-", replacement = "–") %>%
flextable() %>%
set_header_labels(Data.set = "Data set") %>%
flextable::compose(part = "header", j = "Df", value = as_paragraph("Df")) %>%
flextable::compose(part = "header", j = "F", value = as_paragraph("Pseudo-F")) %>%
flextable::compose(part = "header", j = "p.value", value = as_paragraph(as_i("p"), "-value")) %>%
autofit() %>%
font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 12, part = "all") %>%
bold(part = "header") %>%
colformat_num(j = 'Df', digits = 2) %>%
colformat_num(j = "F", digits = 2) %>%
colformat_num(j = "p.value", digits = 4, na_str = "ns") %>%
align_nottext_col(align = "center", header = TRUE, footer = TRUE) %>%
align(align = "center", j = "p.value")
vpiDoc = read_docx()
vpiDoc = body_add_flextable(vpiDoc, value = distPermTab)
print(vpiDoc, target = "../tables/vpiTable.docx")
distPermTab
print(distPermTab)
distPermTab <- distPerm %>%
rename("p.value" = "Pr(>F)") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate(p.value = replace(p.value, p.value >= 0.05, "ns")) %>%
mutate(p.value = replace(p.value, p.value < 0.001, "< 0.001")) %>%
mutate_if(is.character, str_replace_all, pattern = "-", replacement = "–") %>%
flextable() %>%
set_header_labels(Data.set = "Data set") %>%
flextable::compose(part = "header", j = "Df", value = as_paragraph("Df")) %>%
flextable::compose(part = "header", j = "SumOfSqs", value = as_paragraph("Sume of Squares")) %>%
flextable::compose(part = 'header', j = "R2", value = as_paragraph("R"), as_sup("2")) %>%
flextable::compose(part = "header", j = "F", value = as_paragraph("Pseudo-F")) %>%
flextable::compose(part = "header", j = "p.value", value = as_paragraph(as_i("p"), "-value")) %>%
autofit() %>%
font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 12, part = "all") %>%
bold(part = "header") %>%
colformat_num(j = 'Df', digits = 2) %>%
colformat_num(j = "F", digits = 2) %>%
colformat_num(j = "p.value", digits = 4, na_str = "ns") %>%
align_nottext_col(align = "center", header = TRUE, footer = TRUE) %>%
align(align = "center", j = "p.value")
distPermTab <- distPerm %>%
rename("p.value" = "Pr(>F)") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate(p.value = replace(p.value, p.value >= 0.05, "ns")) %>%
mutate(p.value = replace(p.value, p.value < 0.001, "< 0.001")) %>%
mutate_if(is.character, str_replace_all, pattern = "-", replacement = "–") %>%
flextable() %>%
set_header_labels(Data.set = "Data set") %>%
flextable::compose(part = "header", j = "Df", value = as_paragraph("Df")) %>%
flextable::compose(part = "header", j = "SumOfSqs", value = as_paragraph("Sume of Squares")) %>%
flextable::compose(part = 'header', j = "R2", value = as_paragraph("R", as_sup("2"))) %>%
flextable::compose(part = "header", j = "F", value = as_paragraph("Pseudo-F")) %>%
flextable::compose(part = "header", j = "p.value", value = as_paragraph(as_i("p"), "-value")) %>%
autofit() %>%
font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 12, part = "all") %>%
bold(part = "header") %>%
colformat_num(j = 'Df', digits = 2) %>%
colformat_num(j = "F", digits = 2) %>%
colformat_num(j = "p.value", digits = 4, na_str = "ns") %>%
align_nottext_col(align = "center", header = TRUE, footer = TRUE) %>%
align(align = "center", j = "p.value")
print(distPermTab)
vpiDoc = read_docx()
vpiDoc = body_add_flextable(vpiDoc, value = distPermTab)
print(vpiDoc, target = "../tables/vpiTable.docx")
vpiDoc = read_docx()
vpiDoc = body_add_flextable(vpiDoc, value = distPermTab)
print(vpiDoc, target = "../tables/vpiTable.docx")
distPermTab
distPermTab <- distPerm %>%
rename("p.value" = "Pr(>F)") %>%
mutate_if(is.numeric, round, digits = 3) %>%
mutate(p.value = replace(p.value, p.value >= 0.05, "ns")) %>%
mutate(p.value = replace(p.value, p.value < 0.001, "< 0.001")) %>%
mutate_if(is.character, str_replace_all, pattern = "-", replacement = "–") %>%
flextable() %>%
set_header_labels(Data.set = "Data set") %>%
flextable::compose(part = "header", j = "Df", value = as_paragraph("Df")) %>%
flextable::compose(part = "header", j = "SumOfSqs", value = as_paragraph("Sum of Squares")) %>%
flextable::compose(part = 'header', j = "R2", value = as_paragraph("R", as_sup("2"))) %>%
flextable::compose(part = "header", j = "F", value = as_paragraph("Pseudo-F")) %>%
flextable::compose(part = "header", j = "p.value", value = as_paragraph(as_i("p"), "-value")) %>%
autofit() %>%
font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 12, part = "all") %>%
bold(part = "header") %>%
colformat_num(j = 'Df', digits = 2) %>%
colformat_num(j = "F", digits = 2) %>%
colformat_num(j = "p.value", digits = 4, na_str = "ns") %>%
align_nottext_col(align = "center", header = TRUE, footer = TRUE) %>%
align(align = "center", j = "p.value")
vpiDoc = read_docx()
vpiDoc = body_add_flextable(vpiDoc, value = distPermTab)
print(vpiDoc, target = "../tables/vpiTable.docx")
vpiDoc = read_docx()
vpiDoc = body_add_flextable(vpiDoc, value = distPermTab)
print(vpiDoc, target = "../tables/vpiTable.docx")
distPermTab
comboPlot <- acerStack+apalStack
ACER <- vpiData2 %>%
filter(species == "ACER") %>%
filter(abundance > 1) %>%
droplevels()
APAL <- vpiData2 %>%
filter(species == "APAL") %>%
filter(abundance > 1) %>%
droplevels()
acerStack1 <- ggplot(ACER, aes(x = timePoint, y = abundance))+
geom_bar(aes(fill = factor(class)), position = position_stack(reverse = TRUE), stat = 'identity', color = 'black', alpha = 0.8)+
ylim(0,100)+
labs(y = "Relative Abundance (%)", fill = "Class", title = "Relative Species Abundance > 1%", x = "Time Point")+
scale_x_discrete(labels = c("Baseline", "12 Month"))+
scale_y_reverse()+
facet_wrap(.~Site, scales = 'free')
acerStack <- acerStack1 +theme(
axis.text.x = element_text(size = 15, colour = "black", vjust = 0.5, hjust = 0.5, face= "bold"),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 40, face = "bold"),
axis.text.y = element_text(colour = "black", size = 30, face = "bold"),
legend.title = element_text(size = 40, face = "bold"),
legend.text = element_text(size = 36, face = "bold", colour = "black"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(size = 40, face = "bold"),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=40, color="black"),
legend.position = "right")
acerStack
apalStack1 <- ggplot(APAL, aes(x = timePoint, y = abundance))+
geom_bar(aes(fill = factor(class)), position = position_stack(reverse = TRUE), stat = 'identity', color = 'black', alpha = 0.8)+
ylim(0,100)+
labs(y = "Relative Abundance (%)", fill = "Class", title = "Relative Species Abundance > 1%", x = "Time Point")+
scale_x_discrete(labels = c("Baseline", "12 Month"))+
scale_y_reverse()+
facet_wrap(.~Site, scales = 'free')
apalStack <- apalStack1 +theme(
axis.text.x = element_text(size = 15, colour = "black", vjust = 0.5, hjust = 0.5, face= "bold"),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 40, face = "bold"),
axis.text.y = element_text(colour = "black", size = 30, face = "bold"),
legend.title = element_text(size = 40, face = "bold"),
legend.text = element_text(size = 36, face = "bold", colour = "black"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(size = 40, face = "bold"),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=40, color="black"),
legend.position = "right")
apalStack
comboPlot <- acerStack+apalStack
comboPlot <- acerStack+apalStack
comboPlot <- acerStack+apalStack
comboPlot
ggsave("../figures/comboPlot.png", plot = comboPlot, width = 20, height = 15, units = 'in', dpi = 600)
comboPlot <- acerStack/apalStack
comboPlot
apalStack
comboPlot <- acerStack/apalStack
comboPlot
comboPlot <- acerStack/apalStack + plot_layout(guides = 'collect')
comboPlot
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left')
library(magrittr)
if (!require("pacman")) install.packages("pacman")
pacman::p_load("ggplot2","officer","ggpubr", "rcompanion", "RColorBrewer", "patchwork", "magrittr","reshape2", "stringr", "plyr", "dplyr", "flextable", "tidyr", "tibble", "vegan", "forcats", "readr", "metafolio", "FSA","viridis", "paletteer", "purrr", "data.table", "ecodist", "glue")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
map_dfr(~read_plus(.))
#Sort out data to have proper columns for all the info i want, this might need to be changed to figure out the Marks vs Plot thing
vpiData <- vpiData1 %>%
tidyr::separate(filename, into=c("Date", "Site"),extra = 'merge',sep = "(?=T)") %>%
tidyr::separate(Date, into=c("remove", "Date"),sep = "../data/vpiData/") %>%
tidyr::separate(Site, into = c("Site", "delete"),sep = ".pqs") %>%
dplyr::select(-c(remove, delete)) %>%
mutate_if(is.character, str_replace_all, pattern = "_", replacement = "-") %>%
tidyr::separate(Date, into = c("Date", "remove"), sep = 10) %>%
dplyr::select(-remove) %>%
tidyr::separate(Site, into = c("Site", "Plot"), sep = "(?=plot)", extra = "merge") %>%
tidyr::separate(Site, into = c("Site", "Mark"), sep = "(?=mark)", extra = "merge") %>%
tidyr::separate(Plot, into = c("Plot", "Mark"), sep = "(?=mark)", extra = "merge" ) %>%
dplyr::rename(abundance = `%`) %>%
tidyr::drop_na(abundance) %>%
arrange(desc(abundance))
# Making a column for Species using the length of each character in our Site Column. Note: we are doing this here before we turn that column into a factor below.
vpiData$species <- if_else(nchar(vpiData$Site) <= 5, "ACER", "APAL" )
#Changing the Date to factors
vpiData$Date<-as.factor(vpiData$Date)
vpiData$Date<-strptime(vpiData$Date,format="%Y-%m-%d") #defining what is the original format of your date
vpiData$Date<-as.Date(vpiData$Date,format="%Y-%m-%d")
#Making some corrections in the naming
vpiData$class <- gsub("Crustose coralline algae natans","Crustose coralline algae",vpiData$class)
vpiData$class <- gsub("Cordata", "Chordata", vpiData$class)
vpiData$class <- gsub("Rubble", "Bare Substrate", vpiData$class)
vpiData$Site <- gsub("T-AP-13pt2", "T-AP-13", vpiData$Site)
vpiData$Site <- gsub("T-AP-13pt1", "T-AP-13", vpiData$Site)
vpiData$Site <- gsub("T-AP-14pt1", "T-AP-14", vpiData$Site)
vpiData$Site <- gsub("T-AP-14pt2", "T-AP-14", vpiData$Site)
vpiData$class <- gsub("Other", NA, vpiData$class)
vpiData$class <- gsub("Review", NA, vpiData$class)
vpiData$class <- gsub("None", NA, vpiData$class)
# Changing other columns to factors
vpiData <- vpiData %>% mutate(Site = factor(Site), class = factor(class), timePoint = factor(timePoint), species = factor(species)) %>%
select(Date, Site, timePoint, species, class, count)
vpiData$timePoint = factor(vpiData$timePoint, levels(vpiData$timePoint)[c(2,1)])
vpiData
View(vpiData)
View(vpiData1)
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
map_dfr(~read_plus(.))
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
map_dfr(~read_plus(.))
vpiData <- vpiData1 %>%
tidyr::separate(filename, into=c("Date", "Site"),extra = 'merge',sep = "(?=T)") %>%
tidyr::separate(Date, into=c("remove", "Date"),sep = "../data/vpiData/") %>%
tidyr::separate(Site, into = c("Site", "delete"),sep = ".pqs") %>%
dplyr::select(-c(remove, delete)) %>%
mutate_if(is.character, str_replace_all, pattern = "_", replacement = "-") %>%
tidyr::separate(Date, into = c("Date", "remove"), sep = 10) %>%
dplyr::select(-remove) %>%
tidyr::separate(Site, into = c("Site", "Plot"), sep = "(?=plot)", extra = "merge") %>%
tidyr::separate(Site, into = c("Site", "Mark"), sep = "(?=mark)", extra = "merge") %>%
tidyr::separate(Plot, into = c("Plot", "Mark"), sep = "(?=mark)", extra = "merge" ) %>%
dplyr::rename(abundance = `%`) %>%
tidyr::drop_na(abundance) %>%
arrange(desc(abundance))
vpiData$species <- if_else(nchar(vpiData$Site) <= 5, "ACER", "APAL" )
#Changing the Date to factors
vpiData$Date<-as.factor(vpiData$Date)
vpiData$Date<-strptime(vpiData$Date,format="%Y-%m-%d") #defining what is the original format of your date
vpiData$Date<-as.Date(vpiData$Date,format="%Y-%m-%d")
vpiData$class <- gsub("Crustose coralline algae natans","Crustose coralline algae",vpiData$class)
vpiData$class <- gsub("Cordata", "Chordata", vpiData$class)
vpiData$class <- gsub("Rubble", "Bare Substrate", vpiData$class)
vpiData$Site <- gsub("T-AP-13pt2", "T-AP-13", vpiData$Site)
vpiData$Site <- gsub("T-AP-13pt1", "T-AP-13", vpiData$Site)
vpiData$Site <- gsub("T-AP-14pt1", "T-AP-14", vpiData$Site)
vpiData$Site <- gsub("T-AP-14pt2", "T-AP-14", vpiData$Site)
vpiData$class <- gsub("Other", NA, vpiData$class)
vpiData$class <- gsub("Review", NA, vpiData$class)
vpiData$class <- gsub("None", NA, vpiData$class)
# Changing other columns to factors
vpiData <- vpiData %>% mutate(Site = factor(Site), class = factor(class), timePoint = factor(timePoint), species = factor(species)) %>%
select(Date, Site, timePoint, species, class, count)
vpiData$timePoint = factor(vpiData$timePoint, levels(vpiData$timePoint)[c(2,1)])
vpiData
vpiData$species <- if_else(nchar(vpiData$Site) <= 5, "ACER", "APAL" )
vpiData <- vpiData1 %>%
tidyr::separate(filename, into=c("Date", "Site"),extra = 'merge',sep = "(?=T)") %>%
tidyr::separate(Date, into=c("remove", "Date"),sep = "../data/vpiData/") %>%
tidyr::separate(Site, into = c("Site", "delete"),sep = ".pqs") %>%
dplyr::select(-c(remove, delete)) %>%
mutate_if(is.character, str_replace_all, pattern = "_", replacement = "-") %>%
tidyr::separate(Date, into = c("Date", "remove"), sep = 10) %>%
dplyr::select(-remove) %>%
tidyr::separate(Site, into = c("Site", "Plot"), sep = "(?=plot)", extra = "merge") %>%
tidyr::separate(Site, into = c("Site", "Mark"), sep = "(?=mark)", extra = "merge") %>%
tidyr::separate(Plot, into = c("Plot", "Mark"), sep = "(?=mark)", extra = "merge" ) %>%
dplyr::rename(abundance = `%`) %>%
tidyr::drop_na(abundance) %>%
arrange(desc(abundance))
vpiData$species <- if_else(nchar(vpiData$Site) <= 5, "ACER", "APAL" )
#Changing the Date to factors
vpiData$Date<-as.factor(vpiData$Date)
vpiData$Date<-strptime(vpiData$Date,format="%Y-%m-%d") #defining what is the original format of your date
vpiData$Date<-as.Date(vpiData$Date,format="%Y-%m-%d")
#Making some corrections in the naming
vpiData$class <- gsub("Crustose coralline algae natans","Crustose coralline algae",vpiData$class)
vpiData$class <- gsub("Cordata", "Chordata", vpiData$class)
vpiData$class <- gsub("Rubble", "Bare Substrate", vpiData$class)
vpiData$Site <- gsub("T-AP-13pt2", "T-AP-13", vpiData$Site)
vpiData$Site <- gsub("T-AP-13pt1", "T-AP-13", vpiData$Site)
vpiData$Site <- gsub("T-AP-14pt1", "T-AP-14", vpiData$Site)
vpiData$Site <- gsub("T-AP-14pt2", "T-AP-14", vpiData$Site)
vpiData$class <- gsub("Other", NA, vpiData$class)
vpiData$class <- gsub("Review", NA, vpiData$class)
vpiData$class <- gsub("None", NA, vpiData$class)
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
map_dfr(~read_plus(.))
vpiData <- vpiData1 %>%
tidyr::separate(filename, into=c("Date", "Site"),extra = 'merge',sep = "(?=T)") %>%
tidyr::separate(Date, into=c("remove", "Date"),sep = "../data/vpiData/") %>%
tidyr::separate(Site, into = c("Site", "delete"),sep = ".pqs") %>%
dplyr::select(-c(remove, delete)) %>%
mutate_if(is.character, str_replace_all, pattern = "_", replacement = "-") %>%
tidyr::separate(Date, into = c("Date", "remove"), sep = 10) %>%
dplyr::select(-remove) %>%
tidyr::separate(Site, into = c("Site", "Plot"), sep = "(?=plot)", extra = "merge") %>%
tidyr::separate(Site, into = c("Site", "Mark"), sep = "(?=mark)", extra = "merge") %>%
tidyr::separate(Plot, into = c("Plot", "Mark"), sep = "(?=mark)", extra = "merge" ) %>%
dplyr::rename(abundance = `%`) %>%
tidyr::drop_na(abundance) %>%
arrange(desc(abundance)) %>%
mutate(
class = case_when(
class == "Crustose coralline algae natans" ~ "Crustose coralline algae",
class == "Cordata" ~ "Chordata",
class == "Rubble" ~ "Bare Substrate",
class == "Other" ~ NA_character_,
class == "Review" ~ NA_character_,
class == "None" ~ NA_character_,
TRUE ~ class),
Site = case_when(
Site %in% c("T-AP-13pt2", "T-AP-13pt1") ~ "T-AP-13",
Site %in% c("T-AP-14pt1", "T-AP-14pt2") ~ "T-AP-14",
TRUE ~ Site),
species = if_else(nchar(Site) <= 5, "ACER", "APAL")) %>%
mutate(
Date = as.factor(Date),
Date = as.Date(strptime(Date, format = "%Y-%m-%d"))) %>%
mutate(
class = gsub("Crustose coralline algae natans", "Crustose coralline algae", class),
class = gsub("Cordata", "Chordata", class),
class = gsub("Rubble", "Bare Substrate", class),
Site = gsub("T-AP-13pt2", "T-AP-13", Site),
Site = gsub("T-AP-13pt1", "T-AP-13", Site),
Site = gsub("T-AP-14pt1", "T-AP-14", Site),
Site = gsub("T-AP-14pt2", "T-AP-14", Site),
class = gsub("Other", NA, class),
class = gsub("Review", NA, class),
class = gsub("None", NA, class))
levels(vpiData$timePoint)
levels(as.factor(vpiData$timePoint))
vpiData <- vpiData %>%
mutate(timePoint = factor(timePoint, levels = levels(timePoint)[c(2,1)]))
vpiData
vpiData <- vpiData %>%
mutate(timePoint = factor(timePoint, levels = levels(timePoint)[c(2,1)]))
vpiData
vpiData2 <- vpiData %>%
# dplyr::filter(class != c("NA")) %>%
# droplevels() %>%
group_by(Site,timePoint, species, class) %>%
# summarise(count = sum(count)) %>%
group_by(Site,timePoint) %>%
mutate(totalObservations = sum(count, na.rm = TRUE)) %>%
group_by(Site,timePoint, class) %>%
mutate(abundance = ((count/totalObservations)*100)) %>%
select(-c(totalObservations))
vpiData2 <- data.table(vpiData2)
vpiData2[, `:=`(class, reorder(class, abundance))]
# vpiData2$class <- drop_na(vpiData2$class)
vpiStack3<- ggplot(vpiData4, aes(x = timePoint, y = abundance))+
geom_bar(aes(fill = factor(class)), position = position_stack(reverse = TRUE), stat = 'identity', color = 'black', alpha = 0.8)+
ylim(0,100)+
labs(y = "Relative Abundance (%)", fill = "Class", title = "Relative Species Abundance > 2%", x = "Time Point")+
scale_x_discrete(labels = c("Baseline", "12 Month"))+
scale_y_reverse()+
facet_wrap(.~Site, scales = 'free')
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left')
library(magrittr)
if (!require("pacman")) install.packages("pacman")
pacman::p_load("ggplot2","officer","ggpubr", "rcompanion", "RColorBrewer", "patchwork", "magrittr","reshape2", "stringr", "plyr", "dplyr", "flextable", "tidyr", "tibble", "vegan", "forcats", "readr", "metafolio", "FSA","viridis", "paletteer", "purrr", "data.table", "ecodist", "glue")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
map_dfr(~read_plus(.))
#Sort out data to have proper columns for all the info i want, this might need to be changed to figure out the Marks vs Plot thing
vpiData <- vpiData1 %>%
tidyr::separate(filename, into=c("Date", "Site"),extra = 'merge',sep = "(?=T)") %>%
tidyr::separate(Date, into=c("remove", "Date"),sep = "../data/vpiData/") %>%
tidyr::separate(Site, into = c("Site", "delete"),sep = ".pqs") %>%
dplyr::select(-c(remove, delete)) %>%
mutate_if(is.character, str_replace_all, pattern = "_", replacement = "-") %>%
tidyr::separate(Date, into = c("Date", "remove"), sep = 10) %>%
dplyr::select(-remove) %>%
tidyr::separate(Site, into = c("Site", "Plot"), sep = "(?=plot)", extra = "merge") %>%
tidyr::separate(Site, into = c("Site", "Mark"), sep = "(?=mark)", extra = "merge") %>%
tidyr::separate(Plot, into = c("Plot", "Mark"), sep = "(?=mark)", extra = "merge" ) %>%
dplyr::rename(abundance = `%`) %>%
tidyr::drop_na(abundance) %>%
arrange(desc(abundance))
# Making a column for Species using the length of each character in our Site Column. Note: we are doing this here before we turn that column into a factor below.
vpiData$species <- if_else(nchar(vpiData$Site) <= 5, "ACER", "APAL" )
#Changing the Date to factors
vpiData$Date<-as.factor(vpiData$Date)
vpiData$Date<-strptime(vpiData$Date,format="%Y-%m-%d") #defining what is the original format of your date
vpiData$Date<-as.Date(vpiData$Date,format="%Y-%m-%d")
#Making some corrections in the naming
vpiData <- vpiData %>%
mutate_all(~gsub("Crustose coralline algae natans", "Crustose coralline algae", .)) %>%
mutate_all(~gsub("Cordata", "Chordata", .)) %>%
mutate_all(~gsub("Rubble", "Bare Substrate", .)) %>%
mutate(Site = gsub("T-AP-13pt2", "T-AP-13", Site),
Site = gsub("T-AP-13pt1", "T-AP-13", Site),
Site = gsub("T-AP-14pt1", "T-AP-14", Site),
Site = gsub("T-AP-14pt2", "T-AP-14", Site)) %>%
mutate_all(~gsub("Other|Review|None", NA, .))
# Changing other columns to factors
vpiData <- vpiData %>%
mutate(across(c(Site, class, timePoint, species), as.factor)) %>%
select(Date, Site, timePoint, species, class, count)
# Changing the factor level of timePoint to be chronological
vpiData <- vpiData %>%
mutate(timePoint = factor(timePoint, levels = levels(timePoint)[c(2,1)]))
vpiData
vpiData2 <- vpiData %>%
# dplyr::filter(class != c("NA")) %>%
# droplevels() %>%
group_by(Site,timePoint, species, class) %>%
# summarise(count = sum(count)) %>%
group_by(Site,timePoint) %>%
mutate(totalObservations = sum(count, na.rm = TRUE)) %>%
group_by(Site,timePoint, class) %>%
mutate(abundance = ((count/totalObservations)*100)) %>%
select(-c(totalObservations))
vpiData2 <- vpiData %>%
# dplyr::filter(class != c("NA")) %>%
# droplevels() %>%
group_by(Site,timePoint, species, class) %>%
# summarise(count = sum(count)) %>%
group_by(Site,timePoint) %>%
mutate(totalObservations = sum(count, na.rm = TRUE)) %>%
group_by(Site,timePoint, class) %>%
mutate(abundance = ((count/totalObservations)*100)) %>%
select(-c(totalObservations))
vpiData2 <- vpiData %>%
# dplyr::filter(class != c("NA")) %>%
# droplevels() %>%
group_by(Site,timePoint, species, class)
vpiData2 <- vpiData %>%
# dplyr::filter(class != c("NA")) %>%
# droplevels() %>%
group_by(Site,timePoint, species, class) %>%
# summarise(count = sum(count)) %>%
group_by(Site,timePoint)
View(vpiData2)
str(vpiData2)
levels(vpiData2$Date)
summary(vpiData2$Date)
str(vpiData2$Date)
is.na(vpiData2$Date)
vpiData <- vpiData1 %>%
tidyr::separate(filename, into=c("Date", "Site"),extra = 'merge',sep = "(?=T)") %>%
tidyr::separate(Date, into=c("remove", "Date"),sep = "../data/vpiData/") %>%
tidyr::separate(Site, into = c("Site", "delete"),sep = ".pqs") %>%
dplyr::select(-c(remove, delete)) %>%
mutate_if(is.character, str_replace_all, pattern = "_", replacement = "-") %>%
tidyr::separate(Date, into = c("Date", "remove"), sep = 10) %>%
dplyr::select(-remove) %>%
tidyr::separate(Site, into = c("Site", "Plot"), sep = "(?=plot)", extra = "merge") %>%
tidyr::separate(Site, into = c("Site", "Mark"), sep = "(?=mark)", extra = "merge") %>%
tidyr::separate(Plot, into = c("Plot", "Mark"), sep = "(?=mark)", extra = "merge" ) %>%
dplyr::rename(abundance = `%`) %>%
tidyr::drop_na(abundance) %>%
arrange(desc(abundance))
vpiData$Date
is.na(vpiData$Date)
hasNAs <- any(is.na(vpiData$Date))
hasNAs
hasNAs <- any(is.na(vpiData2$Date))
hasNAs
vpiData$species <- if_else(nchar(vpiData$Site) <= 5, "ACER", "APAL" )
#Changing the Date to factors
vpiData$Date<-as.Date(vpiData$Date)
hasNAs <- any(is.na(vpiData$Date))
hasNAs
any(is.na(vpidata$Date))
any(is.na(vpiData$Date))
vpiData <- vpiData1 %>%
tidyr::separate(filename, into=c("Date", "Site"),extra = 'merge',sep = "(?=T)") %>%
tidyr::separate(Date, into=c("remove", "Date"),sep = "../data/vpiData/") %>%
tidyr::separate(Site, into = c("Site", "delete"),sep = ".pqs") %>%
dplyr::select(-c(remove, delete)) %>%
mutate_if(is.character, str_replace_all, pattern = "_", replacement = "-") %>%
tidyr::separate(Date, into = c("Date", "remove"), sep = 10) %>%
dplyr::select(-remove) %>%
tidyr::separate(Site, into = c("Site", "Plot"), sep = "(?=plot)", extra = "merge") %>%
tidyr::separate(Site, into = c("Site", "Mark"), sep = "(?=mark)", extra = "merge") %>%
tidyr::separate(Plot, into = c("Plot", "Mark"), sep = "(?=mark)", extra = "merge" ) %>%
dplyr::rename(abundance = `%`) %>%
tidyr::drop_na(abundance) %>%
arrange(desc(abundance))
any(is.na(vpiData$Date))
vpiData$Date
unique(vpiData$Date)
unique(as.Date(vpiData$Date))
