geom_sf(data = countries, fill = "white", size = 0.25) +
geom_sf(data = fknmsBounds, alpha = 0.1) +
geom_rect(aes(xmin = -82.216, xmax = -81.3464, ymin = 24.2806, ymax =24.8452), color = paletteer_d("vapoRwave::vapoRwave")[6], fill = NA, size = 1) +
coord_sf(xlim = c(-89, -77), ylim = c(22, 31)) +
theme_bw() +
theme(legend.title = element_text(size = 9, face = "bold"),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "aliceblue"),
panel.border = element_rect(color = "black", size = 0.75, fill = NA),
legend.text = element_text(size = 9),
legend.position = "none",
plot.background = element_blank())
mainKeys <- ggplot() +
geom_sf(data = flKeys$geometry, fill = "white", color = "gray30") +
geom_sf(data = fknmsBounds, fill = "black", alpha = 0.1) +
geom_sf(data = bathy$geometry, color = "gray75", size = 0.25) +
coord_sf(xlim = c(-81.955348, -81.689479), ylim = c(24.448239,  24.616647)) +
geom_star(data = edr, aes(x = long_x, y = lat_y, starshape = reef, fill = reef), size = 10)+
#Left Segment
geom_segment(aes(x = -81.86, y = 24.47, xend = -81.900, yend = 24.485), size = 0.25) +
# Right Segment
geom_segment(aes(x = -81.825, y = 24.47, xend = -81.781, yend = 24.485), size = 0.25) +
geom_rect(aes(xmin = -81.86, xmax = -81.825, ymin =24.449, ymax =24.47), color = paletteer_d("vapoRwave::vapoRwave")[6], fill = NA, size = 1) +
annotation_scale(location = "bl") +
annotation_north_arrow(location = "br", which_north = "true", style = north_arrow_minimal()) +
guides(fill = guide_legend(override.aes = list(shape = 22, color = NA, size = 4), ncol = 2, order = 1), shape = guide_legend(override.aes = list(size = 3), order = 2), color = guide_legend(override.aes = list(fill = "black", alpha = 0.1), order = 3)) +
scale_x_continuous(breaks = c(seq(-82, -80, by = .05))) +
scale_y_continuous(breaks = c(seq(24, 25, by = .05))) +
theme_bw() +
theme(panel.background = element_rect(fill = "aliceblue"),
panel.border = element_rect(color = "black", size = 0.75, fill = NA),
plot.background = element_blank(),
axis.title = element_blank(),
axis.ticks = element_line(color = "black"),
axis.text = element_text(color = "black"),
legend.position = "none")
edrSites <- ggplot() +
geom_sf(data = flKeys$geometry, fill = "white", color = "gray30") +
geom_sf(data = fknmsBounds, fill = "black", alpha = 0.2) +
geom_sf(data = bathy$geometry, color = "grey30", size = 0.25) +
geom_point(data = sites, aes(x = long_x, y = lat_y, fill = site, shape = species), size = 2, alpha = 1) +
scale_shape_manual(values = c(21,22), name = "Species", labels = c("ACER", "APAL")) +
guides(fill = guide_legend(override.aes = list(shape = 22, color = NA, size = 4), ncol = 2, order = 1), shape = guide_legend(override.aes = list(size = 3), order = 2), color = guide_legend(override.aes = list(fill = "black", alpha = 0.1), order = 3)) +
coord_sf(xlim = c(-81.8459, -81.8427), ylim = c(24.45856,  24.4601)) +
annotation_scale(location = "bl") +
scale_fill_discrete(name = "Site")+
theme_bw() +
theme(legend.title = element_text(size = 9, face = "bold"),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "aliceblue"),
panel.border = element_rect(color = "black", size = 0.75, fill = NA),
legend.position = "right",
legend.direction = "vertical",
legend.box = "horizontal",
plot.background = element_blank())
# edr_legend <- cowplot::get_legend(edrSites)
# edr_legend <- ggpubr::as_ggplot(edr_legend)
#In order for this to work... you have to change legend.position = "none" to legend.position = "right" (or wve direction you want) the legend from EDR sites above... working to make this better
leg <- get_legend(edrSites)
edrLeg <- as_ggplot(leg)
edrMap = ggdraw() +
draw_plot(mainKeys) +
draw_plot(floridaMap, x = .08, y = 0.6, width = 0.25, height = 0.25) +
draw_plot(edrSites, x =.28, y = .25, width = 0.4, height = 0.4)
# edrNew <- edrMap / edrLeg + plot_layout(heights = unit(c(5,1), c('cm')))
ggsave("../figures/figure1Jitter.png", plot = edrMap, width = 16, height = 16, units = "cm", dpi = 600)
ggsave("../figures/figure1.png", plot = edrMap, width = 16, height = 16, units = "cm", dpi = 600)
ggsave("../figures/figure1Legend.png", plot = edrLeg, width = 16, height = 16, units = "cm", dpi = 600)
edrSites <- ggplot() +
geom_sf(data = flKeys$geometry, fill = "white", color = "gray30") +
geom_sf(data = fknmsBounds, fill = "black", alpha = 0.2) +
geom_sf(data = bathy$geometry, color = "grey30", size = 0.25) +
geom_point(data = sites, aes(x = long_x, y = lat_y, fill = site, shape = species), size = 2, alpha = 1) +
scale_shape_manual(values = c(21,22), name = "Species", labels = c("ACER", "APAL")) +
guides(fill = guide_legend(override.aes = list(shape = 22, color = NA, size = 4), ncol = 2, order = 1), shape = guide_legend(override.aes = list(size = 3), order = 2), color = guide_legend(override.aes = list(fill = "black", alpha = 0.1), order = 3)) +
coord_sf(xlim = c(-81.8459, -81.8427), ylim = c(24.45856,  24.4601)) +
annotation_scale(location = "bl") +
scale_fill_discrete(name = "Site")+
theme_bw() +
theme(legend.title = element_text(size = 9, face = "bold"),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "aliceblue"),
panel.border = element_rect(color = "black", size = 0.75, fill = NA),
legend.position = "none",
legend.direction = "vertical",
legend.box = "horizontal",
plot.background = element_blank())
edrMap = ggdraw() +
draw_plot(mainKeys) +
draw_plot(floridaMap, x = .08, y = 0.6, width = 0.25, height = 0.25) +
draw_plot(edrSites, x =.28, y = .25, width = 0.4, height = 0.4)
# edrNew <- edrMap / edrLeg + plot_layout(heights = unit(c(5,1), c('cm')))
ggsave("../figures/figure1Jitter.png", plot = edrMap, width = 16, height = 16, units = "cm", dpi = 600)
ggsave("../figures/figure1.png", plot = edrMap, width = 16, height = 16, units = "cm", dpi = 600)
if (!require("pacman")) install.packages("pacman")
pacman::p_load("ggplot2","officer","ggpubr", "rcompanion", "RColorBrewer", "patchwork", "magrittr","reshape2", "stringr", "plyr", "dplyr", "flextable", "tidyr", "tibble", "vegan", "forcats", "readr", "metafolio", "FSA","viridis", "paletteer", "purrr", "data.table")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
map_df(~read_plus(.))
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
map_df(~read_plus(.))
?map_df
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
purrr:map_df(~read_plus(.))
if (!require("pacman")) install.packages("pacman")
pacman::p_load("ggplot2","officer","ggpubr", "rcompanion", "RColorBrewer", "patchwork", "magrittr","reshape2", "stringr", "plyr", "dplyr", "flextable", "tidyr", "tibble", "vegan", "forcats", "readr", "metafolio", "FSA","viridis", "paletteer", "purrr", "data.table")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
purrr:map_df(~read_plus(.))
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
purrr::map_df(~read_plus(.))
library(cli)
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
purrr::map_df(~read_plus(.))
install.packages("cli")
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left')
library(magrittr)
if (!require("pacman")) install.packages("pacman")
pacman::p_load("ggplot2","officer","ggpubr", "rcompanion", "RColorBrewer", "patchwork", "magrittr","reshape2", "stringr", "plyr", "dplyr", "flextable", "tidyr", "tibble", "vegan", "forcats", "readr", "metafolio", "FSA","viridis", "paletteer", "purrr", "data.table")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
map_df(~read_plus(.))
# Install the installr package
install.packages("installr")
# Load installr
library(installr)
# Run the update function
updateR()
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left')
library(magrittr)
if (!require("pacman")) install.packages("pacman")
pacman::p_load("ggplot2","officer","ggpubr", "rcompanion", "RColorBrewer", "patchwork", "magrittr","reshape2", "stringr", "plyr", "dplyr", "flextable", "tidyr", "tibble", "vegan", "forcats", "readr", "metafolio", "FSA","viridis", "paletteer", "purrr", "data.table")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
map_df(~read_plus(.))
library(purrr)
library(cli)
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
map_df(~read_plus(.))
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
purrr::map_df(~read_plus(.))
?p_load
if (!require("pacman")) install.packages("pacman")
pacman::p_load("ggplot2","officer","ggpubr", "rcompanion", "RColorBrewer", "patchwork", "magrittr","reshape2", "stringr", "plyr", "dplyr", "flextable", "tidyr", "tibble", "vegan", "forcats", "readr", "metafolio", "FSA","viridis", "paletteer", "purrr", "data.table", install = TRUE, update = TRUE)
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
purrr::map_df(~read_plus(.))
if (!require("pacman")) install.packages("pacman")
pacman::p_load("ggplot2","officer","ggpubr", "rcompanion", "RColorBrewer", "patchwork", "magrittr","reshape2", "stringr", "plyr", "dplyr", "flextable", "tidyr", "tibble", "vegan", "forcats", "readr", "metafolio", "FSA","viridis", "paletteer", "purrr", "data.table")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
install.packages(c("cli", "data.table", "digest", "dplyr", "flextable", "forcats", "htmltools"))
install.packages('cli')
install.packages("cli")
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left')
if (!require("pacman")) install.packages("pacman")
pacman::p_load("ggplot2","officer","ggpubr", "rcompanion", "RColorBrewer", "patchwork", "magrittr","reshape2", "stringr", "plyr", "dplyr", "flextable", "tidyr", "tibble", "vegan", "forcats", "readr", "metafolio", "FSA","viridis", "paletteer", "purrr", "data.table")
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left')
install.packages("knitr")
myPaths <- .libPaths()   # get the paths
myPaths <- c(myPaths[2], myPaths[1])  # switch them
.libPaths(myPaths)  # reassign them
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left')
library(magrittr)
if (!require("pacman")) install.packages("pacman")
pacman::p_load("ggplot2","officer","ggpubr", "rcompanion", "RColorBrewer", "patchwork", "magrittr","reshape2", "stringr", "plyr", "dplyr", "flextable", "tidyr", "tibble", "vegan", "forcats", "readr", "metafolio", "FSA","viridis", "paletteer", "purrr", "data.table")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
map_df(~read_plus(.))
#Sort out data to have proper columns for all the info i want, this might need to be changed to figure out the Marks vs Plot thing
vpiData <- vpiData1 %>%
tidyr::separate(filename, into=c("Date", "Site"),extra = 'merge',sep = "(?=T)") %>%
tidyr::separate(Date, into=c("remove", "Date"),sep = "../data/vpiData/") %>%
tidyr::separate(Site, into = c("Site", "delete"),sep = ".pqs") %>%
dplyr::select(-c(remove, delete)) %>%
mutate_if(is.character, str_replace_all, pattern = "_", replacement = "-") %>%
tidyr::separate(Date, into = c("Date", "remove"), sep = 10) %>%
dplyr::select(-remove) %>%
tidyr::separate(Site, into = c("Site", "Plot"), sep = "(?=plot)", extra = "merge") %>%
tidyr::separate(Site, into = c("Site", "Mark"), sep = "(?=mark)", extra = "merge") %>%
tidyr::separate(Plot, into = c("Plot", "Mark"), sep = "(?=mark)", extra = "merge" ) %>%
dplyr::rename(abundance = `%`) %>%
tidyr::drop_na(abundance) %>%
arrange(desc(abundance))
#Changing the Date to factors
vpiData$Date<-as.factor(vpiData$Date)
vpiData$Date<-strptime(vpiData$Date,format="%Y-%m-%d") #defining what is the original format of your date
vpiData$Date<-as.Date(vpiData$Date,format="%Y-%m-%d")
vpiData$Site <- as.factor(vpiData$Site)
#Making some corrections in the naming
vpiData$class <- gsub("Crustose coralline algae natans","Crustose coralline algae",vpiData$class)
vpiData$class <- gsub("Rubble", "Bare Substrate", vpiData$class)
vpiData$class <- as.factor(vpiData$class)
vpiData$Site <- as.factor(vpiData$Site)
vpiData$timePoint <- as.factor(vpiData$timePoint)
vpiData$timePoint = factor(vpiData$timePoint, levels(vpiData$timePoint)[c(2,1)])
vpiData
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left')
library(magrittr)
if (!require("pacman")) install.packages("pacman")
pacman::p_load("ggplot2","officer","ggpubr", "rcompanion", "RColorBrewer", "patchwork", "magrittr","reshape2", "stringr", "plyr", "dplyr", "flextable", "tidyr", "tibble", "vegan", "forcats", "readr", "metafolio", "FSA","viridis", "paletteer", "purrr", "data.table")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
map_df(~read_plus(.))
#Sort out data to have proper columns for all the info i want, this might need to be changed to figure out the Marks vs Plot thing
vpiData <- vpiData1 %>%
tidyr::separate(filename, into=c("Date", "Site"),extra = 'merge',sep = "(?=T)") %>%
tidyr::separate(Date, into=c("remove", "Date"),sep = "../data/vpiData/") %>%
tidyr::separate(Site, into = c("Site", "delete"),sep = ".pqs") %>%
dplyr::select(-c(remove, delete)) %>%
mutate_if(is.character, str_replace_all, pattern = "_", replacement = "-") %>%
tidyr::separate(Date, into = c("Date", "remove"), sep = 10) %>%
dplyr::select(-remove) %>%
tidyr::separate(Site, into = c("Site", "Plot"), sep = "(?=plot)", extra = "merge") %>%
tidyr::separate(Site, into = c("Site", "Mark"), sep = "(?=mark)", extra = "merge") %>%
tidyr::separate(Plot, into = c("Plot", "Mark"), sep = "(?=mark)", extra = "merge" ) %>%
dplyr::rename(abundance = `%`) %>%
tidyr::drop_na(abundance) %>%
arrange(desc(abundance))
#Changing the Date to factors
vpiData$Date<-as.factor(vpiData$Date)
vpiData$Date<-strptime(vpiData$Date,format="%Y-%m-%d") #defining what is the original format of your date
vpiData$Date<-as.Date(vpiData$Date,format="%Y-%m-%d")
vpiData$Site <- as.factor(vpiData$Site)
#Making some corrections in the naming
vpiData$class <- gsub("Crustose coralline algae natans","Crustose coralline algae",vpiData$class)
vpiData$class <- gsub("Rubble", "Bare Substrate", vpiData$class)
vpiData$class <- as.factor(vpiData$class)
vpiData$Site <- as.factor(vpiData$Site)
vpiData$timePoint <- as.factor(vpiData$timePoint)
vpiData$timePoint = factor(vpiData$timePoint, levels(vpiData$timePoint)[c(2,1)])
vpiData
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left')
library(magrittr)
if (!require("pacman")) install.packages("pacman")
pacman::p_load("ggplot2","officer","ggpubr", "rcompanion", "RColorBrewer", "patchwork", "magrittr","reshape2", "stringr", "plyr", "dplyr", "flextable", "tidyr", "tibble", "vegan", "forcats", "readr", "metafolio", "FSA","viridis", "paletteer", "purrr", "data.table")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
map_df(~read_plus(.))
#Sort out data to have proper columns for all the info i want, this might need to be changed to figure out the Marks vs Plot thing
vpiData <- vpiData1 %>%
tidyr::separate(filename, into=c("Date", "Site"),extra = 'merge',sep = "(?=T)") %>%
tidyr::separate(Date, into=c("remove", "Date"),sep = "../data/vpiData/") %>%
tidyr::separate(Site, into = c("Site", "delete"),sep = ".pqs") %>%
dplyr::select(-c(remove, delete)) %>%
mutate_if(is.character, str_replace_all, pattern = "_", replacement = "-") %>%
tidyr::separate(Date, into = c("Date", "remove"), sep = 10) %>%
dplyr::select(-remove) %>%
tidyr::separate(Site, into = c("Site", "Plot"), sep = "(?=plot)", extra = "merge") %>%
tidyr::separate(Site, into = c("Site", "Mark"), sep = "(?=mark)", extra = "merge") %>%
tidyr::separate(Plot, into = c("Plot", "Mark"), sep = "(?=mark)", extra = "merge" ) %>%
dplyr::rename(abundance = `%`) %>%
tidyr::drop_na(abundance) %>%
arrange(desc(abundance))
#Changing the Date to factors
vpiData$Date<-as.factor(vpiData$Date)
vpiData$Date<-strptime(vpiData$Date,format="%Y-%m-%d") #defining what is the original format of your date
vpiData$Date<-as.Date(vpiData$Date,format="%Y-%m-%d")
vpiData$Site <- as.factor(vpiData$Site)
#Making some corrections in the naming
vpiData$class <- gsub("Crustose coralline algae natans","Crustose coralline algae",vpiData$class)
vpiData$class <- gsub("Rubble", "Bare Substrate", vpiData$class)
vpiData$class <- as.factor(vpiData$class)
vpiData$Site <- as.factor(vpiData$Site)
vpiData$timePoint <- as.factor(vpiData$timePoint)
vpiData$timePoint = factor(vpiData$timePoint, levels(vpiData$timePoint)[c(2,1)])
vpiData
vpiData2 <- vpiData %>%
group_by(Site,timePoint, class) %>%
summarise(count = sum(count)) %>%
group_by(Site,timePoint) %>%
mutate(totalObservations = sum(count, na.rm = TRUE)) %>%
group_by(Site,timePoint, class) %>%
mutate(abundance = ((count/totalObservations)*100)) %>%
select(-c(totalObservations))
vpiData2 <- data.table(vpiData2)
vpiData2[, `:=`(class, reorder(class, abundance))]
# myColors <- paletteer_c("harrypotter::gryffindor", 6, direction = 1 )
#myColors <- paletteer_c("pals::ocean.balance", 6, direction = 1)
#Color Palette using a selection of Mote's preferred colors
# myColors <- c("#d2232a", "#ca581f", "#f26522", "#85b034", "#00ae9d", "#78779e")
# Using this just to plot the top 2% of species
vpiData3 <- vpiData2 %>%
filter(abundance > 1) %>%
droplevels() %>%
arrange(desc(abundance))
# vpiData1$class = factor(vpiData1$class, levels(vpiData1$class)[c(2,6,3,4,5,1)])
vpiStack3<- ggplot(vpiData3, aes(x = timePoint, y = abundance))+
geom_bar(aes(fill = factor(class)), position = position_stack(reverse = TRUE), stat = 'identity', color = 'black', alpha = 0.8)+
ylim(0,100)+
labs(y = "Relative Abundance (%)", fill = "Class", title = "Relative Species Abundance > 2%")+
scale_x_discrete(labels = c("Baseline", "12 Month"))+
scale_y_reverse()+
facet_wrap(.~Site, scales = 'free')
vpiStack <- vpiStack3+theme(
axis.text.x = element_text(size = 15, colour = "black", vjust = 0.5, hjust = 0.5, face= "bold"),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 40, face = "bold"),
axis.text.y = element_text(colour = "black", size = 30, face = "bold"),
legend.title = element_text(size = 40, face = "bold"),
legend.text = element_text(size = 36, face = "bold", colour = "black"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(size = 40, face = "bold"),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=40, color="black"),
legend.position = "right")
vpiStack
ggsave("../figures/vpiStackBar.png", plot = vpiStack, width = 20, height = 15, units = 'in', dpi = 600)
ggsave("../figures/nfwfReportFig2.png", plot = vpiStack, width = 20, height = 15, units = "in", dpi = 600)
vpiStack
vpiData4 <- vpiData2 %>%
filter(abundance > 1, site == c("T-AP-5", "T-14")) %>%
droplevels() %>%
arrange(desc(abundance))
vpiData4 <- vpiData2 %>%
filter(abundance > 1, site %in% c("T-AP-5", "T-14")) %>%
droplevels() %>%
arrange(desc(abundance))
vpiData4 <- vpiData2 %>%
filter(abundance > 1) %>%
filter(site %in% c("T-AP-5", "T-14")) %>%
droplevels() %>%
arrange(desc(abundance))
View(vpiData2)
vpiData4 <- vpiData2 %>%
filter(abundance > 1) %>%
filter(Site %in% c("T-AP-5", "T-14")) %>%
droplevels() %>%
arrange(desc(abundance))
vpiStack3<- ggplot(vpiData4, aes(x = timePoint, y = abundance))+
geom_bar(aes(fill = factor(class)), position = position_stack(reverse = TRUE), stat = 'identity', color = 'black', alpha = 0.8)+
ylim(0,100)+
labs(y = "Relative Abundance (%)", fill = "Class", title = "Relative Species Abundance > 2%")+
scale_x_discrete(labels = c("Baseline", "12 Month"))+
scale_y_reverse()+
facet_wrap(.~Site, scales = 'free')
vpiStack3
vpiData4 <- vpiData2 %>%
filter(abundance > 1) %>%
filter(Site %in% c("T-AP-5", "T-14")) %>%
droplevels() %>%
arrange(desc(abundance))
# vpiData1$class = factor(vpiData1$class, levels(vpiData1$class)[c(2,6,3,4,5,1)])
vpiStack3<- ggplot(vpiData4, aes(x = timePoint, y = abundance))+
geom_bar(aes(fill = factor(class)), position = position_stack(reverse = TRUE), stat = 'identity', color = 'black', alpha = 0.8)+
ylim(0,100)+
labs(y = "Relative Abundance (%)", fill = "Class", title = "Relative Species Abundance > 2%", x = "Time Point")+
scale_x_discrete(labels = c("Baseline", "12 Month"))+
scale_y_reverse()+
facet_wrap(.~Site, scales = 'free')
vpiStack <- vpiStack3+theme(
axis.text.x = element_text(size = 15, colour = "black", vjust = 0.5, hjust = 0.5, face= "bold"),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 40, face = "bold"),
axis.text.y = element_text(colour = "black", size = 30, face = "bold"),
legend.title = element_text(size = 40, face = "bold"),
legend.text = element_text(size = 36, face = "bold", colour = "black"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(size = 40, face = "bold"),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=40, color="black"),
legend.position = "right")
vpiStack
ggsave("../figures/vpiStackBarSubset.png", plot = vpiStack, width = 20, height = 15, units = 'in', dpi = 600)
?subset
#setup rmarkdown environment first
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left')
knitr::opts_knit$set(root.dir = '../data')
options(width = 88)
setwd("../data")
if (!require("pacman")) install.packages("pacman")
pacman::p_load("cowplot", "flextable", "ggrepel", "ggspatial", "lubridate", "officer", "paletteer", "patchwork", "rgdal", "rnaturalearth", "sf", "tidyverse", "gdata", "rgeos", "readxl", "ggstar", "cowplot", "ggpubr", "googledrive")
pacman::p_load_gh("eliocamp/ggnewscale")
pacman::p_load_gh("ropensci/rnaturalearthhires")
drive_download(
as_id("1aXcmLPSRHAlh7N6XhM0g9GKJb4JtOpdJL35dL3Vd678"),
path = "../data/metadata/siteCoordinates.xlsx",
overwrite = TRUE)
sites = read_excel("../data/metadata/siteCoordinates.xlsx", sheet = 2)
sites$site <- as.factor(sites$Site)
sites$species <- as.factor(sites$Species)
levels(sites$site)
sites$`Date Collected` <- as.Date(sites$`Date Collected` )
sites <- sites %>%
filter(`Date Collected` > "2022-06-30")
# Now I'm making sure I'm just including the EDR sites
sites <- sites %>% filter(Project == "NFWF")
drop.levels(sites)
sites$reef <- sites$`Iconic Reef?`
#this is a cheap way of doing this, but i just needed a single coordinate for the site as a whole, so subsetting one site from EDR and using that for my "EDR" designation
edr <- sites %>% filter(site == "T_11")
fknmsBounds <- read_sf("../data/shp/FKNMS_Boundary/FKNMS_Boundary.shp") %>% st_transform(crs = 4326)
flKeys <- read_sf("../data/shp/flKeys.shp") %>% st_transform(crs = 4326)
states = st_as_sf(ne_states(country = c("United States of America")), scale = "large")
countries = st_as_sf(ne_countries(country = c("Cuba", "Mexico", "The Bahamas"), scale = "large"))
florida = read_sf("../data/shp/flKeys.shp") %>% st_transform(crs = 4326)
bathy = read_sf("../data/shp/flBathy.shp") %>% st_transform(crs = 4326) %>% subset(subset = DATASET %in% c("fl_shelf", "fl_coast"))
tortugasBathy = read_sf("../data/shp/tortugasBathy.shp") %>% st_transform(crs = 4326)
View(tortugasBathy)
View(tortugasBathy)
flPal = paletteer_d("vapoRwave::jazzCup")[c(2:5)]
boundPal = c("gray30", paletteer_d("vapoRwave::vapoRwave")[10])
floridaMap = ggplot() +
geom_sf(data = states, fill = "white", size = 0.25) +
geom_sf(data = countries, fill = "white", size = 0.25) +
geom_sf(data = fknmsBounds, alpha = 0.1) +
geom_rect(aes(xmin = -82.216, xmax = -81.3464, ymin = 24.2806, ymax =24.8452), color = paletteer_d("vapoRwave::vapoRwave")[6], fill = NA, size = 1) +
coord_sf(xlim = c(-89, -77), ylim = c(22, 31)) +
theme_bw() +
theme(legend.title = element_text(size = 9, face = "bold"),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "aliceblue"),
panel.border = element_rect(color = "black", size = 0.75, fill = NA),
legend.text = element_text(size = 9),
legend.position = "none",
plot.background = element_blank())
floridaMap
