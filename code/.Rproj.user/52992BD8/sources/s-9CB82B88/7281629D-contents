##############################2021 OFAV SETTLEMENT ANALYSIS######################################


############### Settlement by plug conditioning##############
####Plugs were conditioned in a standard orientation (right side up, CCA on the top), an upside down orientation (CCA on the bottom), and a third set of plugs were shaved into pucks (placed flat down, CCA on the top, removed from the bottom of the plug)
# setwd("C:/Users/Briana/Documents/2021 OFAV Study")

#read in dataset
OFAV2021SettRates<-read.csv("2021OFAV SettRates.csv",header = T)

#inspect datafile
str(OFAV2021SettRates)

#make categorial variables factors
OFAV2021SettRates$treatment<-as.factor(OFAV2021SettRates$treatment)
OFAV2021SettRates$rep_tank<-as.factor(OFAV2021SettRates$rep_tank)

# run summary stats by treatment
library(dplyr)
library(FSA)
library(ggplot2)
library(forcats)

group_by(OFAV2021SettRates, treatment) %>%
  summarise(
  count = n(),
  mean = mean(settRate, na.rm = TRUE),
    sd = sd(settRate, na.rm = TRUE),
    median = median(settRate, na.rm = TRUE),
    IQR = IQR(settRate, na.rm = TRUE)
)

#treatment   count  mean    sd median   IQR
#shaved          2  7.56 1.03    7.56 0.731
# standard        2 20.0  3.46   20.0  2.45 
# upside down     2 15.8  0.961  15.8  0.680


OFAV2021SettRates$treatment <- factor(OFAV2021SettRates$treatment,     # Reorder factor levels
                                         c("standard", "upside down", "shaved"))

### calculate standard error of the mean -> will add into ggplot as error bars
# STUFF FROM IAN

  OFAVPlot <- OFAV2021SettRates %>% 
  dplyr::select(c(treatment, repTank, settRate)) %>% 
  group_by(treatment) %>% 
    add_count() %>% 
  summarise(avgSettRate = mean(settRate), n = max(n), sd = sd(settRate), stderror = sd(settRate)/sqrt(n))

### create a barplot of the mean settlement rate of each treatment 

library(ggplot2)
ggplot(data=OFAVPlot, aes(x=treatment, y=avgSettRate, fill = treatment)) +
  geom_bar(stat="identity") + theme(legend.position="none") + theme(text = element_text(color="black", size=15)) +theme(axis.text.x = element_text(color="black", size=12),axis.text.y = element_text(color="black",size=15))+ xlab("Orientation") +ylab("Mean Settlement Rate (+/- SEM)")+  geom_errorbar(aes(ymin = avgSettRate-stderror, ymax = avgSettRate+stderror), width = 0.2) 
  

####run summary test to compare the significance of the means
shapiro.test(OFAV2021SettRates$settRate)
# p = 0.6292 -> data is normally distributed
leveneTest(settRate ~ treatment, data = OFAV2021SettRates)
#Levene's Test for Homogeneity of Variance (center = median)
#Df    F value    Pr(>F)    
#group  2 3.7997e+30 < 2.2e-16 *** ---> variances UNEQUAL, ANOVA could be unreliable

levels(OFAV2021SettRates$treatment)
res.aov <- aov(settRate ~ treatment, data = OFAV2021SettRates)
summary(res.aov)

##            Df Sum Sq Mean Sq F value Pr(>F)  
# treatment    2 160.21   80.10   17.19 0.0227 *
 #Residuals    3  13.98    4.66   
# the Pr is less than F - 0.02 -> significant differences  but we don't know between which groups

TukeyHSD(res.aov)
#                        diff       lwr        upr     p adj
#upside down-standard  -4.244 -13.26503  4.7770338 0.2668056
#shaved-standard *     -12.449 -21.47003 -3.4279662 0.0210420  *
#shaved-upside down *    -8.205 -17.22603  0.8160338 0.0637065   *


#Since the variances are unequal we will run a kruskal wallis and dunn test incase ANOVA is violated
kruskal.test(settRate~treatment, data=OFAV2021SettRates)
#data:  settRate by treatment
#Kruskal-Wallis chi-squared = 4.5714, df = 2, p-value = 0.1017

dunnTest(settRate~treatment,data=OFAV2021SettRates,method="bonferroni")
#            Comparison         Z    P.unadj      P.adj
#1      shaved - standard -2.138090 0.03250944 0.09752833
#2   shaved - upside down -1.069045 0.28504941 0.85514822
#3 standard - upside down  1.069045 0.28504941 0.85514822

#no significant differences detected with kruskal wallis or dunn test

##################SETTLEMENT BY LOCATION AND CONDITIONING###############

OFAV2021LocRates<-read.csv("2021OFAV Location SettRates.csv",header = T)
str(OFAV2021LocRates)

OFAV2021LocRates$treatment<-as.factor(OFAV2021LocRates$treatment)
OFAV2021LocRates$repTank<-as.factor(OFAV2021LocRates$repTank)
OFAV2021LocRates$location<-as.factor(OFAV2021LocRates$location)


group_by(OFAV2021LocRates, location) %>%
  summarise(
    count = n(),
    mean = mean(settlers, na.rm = TRUE),
    sd = sd(settlers, na.rm = TRUE),
    median = median(settlers, na.rm = TRUE),
    IQR = IQR(settlers, na.rm = TRUE)
  )





#location count  mean    sd median   IQR
#<chr>    <int> <dbl> <dbl>  <dbl> <dbl>
# 1 bot      4  10.2   5.65   9.81  9.24
# 2 top      6  7.67  6.47   7.56  8.79

#do I need to subset by treatment? Unsure
#STD=subset(OFAV2021LocRates, treatment=="standard")
#str(STD)
#USD=subset(OFAV2021LocRates, treatment=="upside down")
#str(USD)
#SHVD=subset(OFAV2021LocRates, treatment=="shaved")
#str(SHVD)

### Attempt at subsetting top from bottom and re-running anova

TOP=subset(OFAV2021LocRates, location=="top")
str(TOP)
BOT=subset(OFAV2021LocRates, location=="bot")
str(BOT)









shapiro.test(OFAV2021LocRates$settlers)
#p-value = 0.6886 - seemingly normal, must check variances
leveneTest(settlers ~ treatment, data = OFAV2021LocRates)
#Levene's Test for Homogeneity of Variance (center = median)
#Df F value  Pr(>F)  
#group  2  3.0365 0.1123  ----> variances seemingly equal

#continue with parametric tests, then plot mean settlers and grouped by location

#Two Way ANOVA
#res.aov2 <- aov(settlers ~ treatment + location, data = OFAV2021LocRates)
#summary(res.aov2)

aov.results<-aov(settlers~treatment + location, data = OFAV2021LocRates)
summary(aov.results)

bartlett.test(settlers~location, data = OFAV2021LocRates)

TukeyHSD(aov.results)





OFAV2021LocRates$treatment <- factor(OFAV2021LocRates$treatment,     # Reorder factor levels
                                      c("standard", "upside down", "shaved"))

OFAV2021LocRates$location <- factor(OFAV2021LocRates$location,     # Reorder factor levels
                                      c("top", "bot"))

#box plot of medians using settlement rate
ggplot(OFAV2021LocRates, aes(x=treatment, y=settRate, fill=location))+
  geom_boxplot()+ 
  theme_bw()+ 
  theme(text = element_text(color="black", size=12))+
  theme(axis.text.x = element_text(color="black", size=8),axis.text.y = element_text(color="black",size=12))+ 
  xlab("Orientation")+
  ylab("Median Settlement Rate")+
  scale_fill_discrete(name = "Location", labels = c("Top", "Bottom"))


#bar plot of means showing number of settlers by treatment
#### Only works for single bar plots, does not work on grouped bar plot






locationPlot <- OFAV2021LocRates %>% dplyr::select(treatment, repTank, location, settlers, settRate) %>% 
  group_by(treatment, location) %>% 
  add_count() %>% 
  summarise(avgSettlers = mean(settlers), n = max(n), sd = sd(settlers), stderror = sd(settlers)/sqrt(n))

### create a barplot of the mean settlement rate of each treatment 

library(ggplot2)
locationBarGraph <- ggplot(data=locationPlot, aes(x=treatment, y=avgSettlers, fill = location)) +
  geom_bar(stat="identity", position=position_dodge(0.8)) + 
  theme(legend.position="none") + theme(text = element_text(color="black", size=15)) +
  theme(axis.text.x = element_text(color="black", size=12),axis.text.y = element_text(color="black",size=15))+ xlab("Orientation")+ 
  ylab("Mean Settlers (+/- SEM)")+
  geom_errorbar(aes(ymin = avgSettlers-stderror, ymax = avgSettlers+stderror), width = 0.2, position = position_dodge(0.8)) 

