tidyr::separate(Site, into = c("Site", "delete"),sep = ".pqs") %>%
dplyr::select(-c(remove, delete)) %>%
mutate_if(is.character, str_replace_all, pattern = "_", replacement = "-") %>%
tidyr::separate(Date, into = c("Date", "remove"), sep = 10) %>%
dplyr::select(-remove) %>%
tidyr::separate(Site, into = c("Site", "Plot"), sep = "(?=plot)", extra = "merge") %>%
tidyr::separate(Site, into = c("Site", "Mark"), sep = "(?=mark)", extra = "merge") %>%
tidyr::separate(Plot, into = c("Plot", "Mark"), sep = "(?=mark)", extra = "merge" ) %>%
# tidyr::separate(Date, into = c("Plot", "remove"), sep = 5) %>%
dplyr::rename(abundance = `%`) %>%
tidyr::drop_na(abundance) %>%
arrange(desc(abundance))
#Changing the Date to factors
vpiData$Date<-as.factor(vpiData$Date)
vpiData$Date<-strptime(vpiData$Date,format="%Y-%m-%d") #defining what is the original format of your date
vpiData$Date<-as.Date(vpiData$Date,format="%Y-%m-%d")
#Changing the Date to factors
vpiData$Date<-as.factor(vpiData$Date)
vpiData$Date<-strptime(vpiData$Date,format="%Y-%m-%d") #defining what is the original format of your date
vpiData$Date<-as.Date(vpiData$Date,format="%Y-%m-%d")
#Making some corrections in the naming
#Commented out the other sites (T14)
vpiData$class <- gsub("Crustose coralline algae natans","Crustose coralline algae",vpiData$class)
vpiData$class <- gsub("Cordata", "Chordata", vpiData$class)
vpiData$class <- gsub("Rubble", "Bare Substrate", vpiData$class)
#vpiData$Site <- gsub("T-AP-14pt1", "T-AP-14", vpiData$Site)
#vpiData$Site <- gsub("T-AP-14pt2", "T-AP-14", vpiData$Site)
vpiData$class <- gsub("Other", NA, vpiData$class)
vpiData$class <- gsub("Review", NA, vpiData$class)
vpiData$class <- gsub("None", NA, vpiData$class)
# Changing other columns to factors
#???? Timepoint isn't reading for some
#, species = factor(species) Taken from vpiData after timepoint, deleted species from select between timepoint and class
vpiData <- vpiData %>% mutate(Site = factor(Site), class = factor(class), timePoint = factor(timePoint)) %>%
select(Date, Site, timePoint, class, count)
levels(vpiData$Site)
levels(vpiData$class)
levels(vpiData$timePoint)
vpiData2 <- vpiData %>%
# dplyr::filter(class != c("NA")) %>%
# droplevels() %>%
group_by(Site,timePoint,  class) %>%
summarise(count = sum(count)) %>%
group_by(Site,timePoint) %>%
mutate(totalObservations = sum(count, na.rm = TRUE)) %>%
group_by(Site,timePoint, class) %>%
mutate(abundance = ((count/totalObservations)*100)) %>%
select(-c(totalObservations))
View(vpiData2)
vpiData2 <- vpiData %>%
dplyr::filter(class != c("NA")) %>%
# droplevels() %>%
group_by(Site,timePoint,  class) %>%
summarise(count = sum(count)) %>%
group_by(Site,timePoint) %>%
mutate(totalObservations = sum(count, na.rm = TRUE)) %>%
group_by(Site,timePoint, class) %>%
mutate(abundance = ((count/totalObservations)*100)) %>%
select(-c(totalObservations))
levels(vpiData2$class)
vpiData2 <- vpiData %>%
dplyr::filter(class != c("NA")) %>%
droplevels() %>%
group_by(Site,timePoint,  class) %>%
summarise(count = sum(count)) %>%
group_by(Site,timePoint) %>%
mutate(totalObservations = sum(count, na.rm = TRUE)) %>%
group_by(Site,timePoint, class) %>%
mutate(abundance = ((count/totalObservations)*100)) %>%
select(-c(totalObservations))
# removed { species,}
vpiData2 <- vpiData %>%
dplyr::filter(class != c("NA")) %>%
droplevels() %>%
group_by(plot, timePoint,  class) %>%
summarise(count = sum(count)) %>%
group_by(Site,timePoint) %>%
mutate(totalObservations = sum(count, na.rm = TRUE)) %>%
group_by(Site,timePoint, class) %>%
mutate(abundance = ((count/totalObservations)*100)) %>%
select(-c(totalObservations))
vpiData <- vpiData1 %>%
tidyr::separate(filename, into=c("Date", "Site"),extra = 'merge',sep = "(?=T)") %>%
tidyr::separate(Date, into=c("remove", "Date"),sep = "../data/vpiData/") %>%
tidyr::separate(Site, into = c("Site", "delete"),sep = ".pqs") %>%
dplyr::select(-c(remove, delete)) %>%
mutate_if(is.character, str_replace_all, pattern = "_", replacement = "-") %>%
tidyr::separate(Date, into = c("Date", "remove"), sep = 10) %>%
dplyr::select(-remove) %>%
tidyr::separate(Site, into = c("Site", "Plot"), sep = "(?=plot)", extra = "merge") %>%
tidyr::separate(Site, into = c("Site", "Mark"), sep = "(?=mark)", extra = "merge") %>%
tidyr::separate(Plot, into = c("Plot", "Mark"), sep = "(?=mark)", extra = "merge" ) %>%
# tidyr::separate(Date, into = c("Plot", "remove"), sep = 5) %>%
dplyr::rename(abundance = `%`) %>%
tidyr::drop_na(abundance) %>%
arrange(desc(abundance))
# Making a column for Species using the length of each charactr in our Site Column. Note: we are doing this here before we turn that column into a factor below.
#vpiData$species <- if_else(nchar(vpiData$Site) <= 5, "ACER", "APAL" )
#### need to add if-else for control, outplant immediate, and outplant delay as well as cleaned vs uncleaned sites???
#vpiData$plot <- if_
#Changing the Date to factors
vpiData$Date<-as.factor(vpiData$Date)
vpiData$Date<-strptime(vpiData$Date,format="%Y-%m-%d") #defining what is the original format of your date
vpiData$Date<-as.Date(vpiData$Date,format="%Y-%m-%d")
#Making some corrections in the naming
#Commented out the other sites (T14)
vpiData$class <- gsub("Crustose coralline algae natans","Crustose coralline algae",vpiData$class)
vpiData$class <- gsub("Cordata", "Chordata", vpiData$class)
vpiData$class <- gsub("Rubble", "Bare Substrate", vpiData$class)
#vpiData$Site <- gsub("T-AP-14pt1", "T-AP-14", vpiData$Site)
#vpiData$Site <- gsub("T-AP-14pt2", "T-AP-14", vpiData$Site)
vpiData$class <- gsub("Other", NA, vpiData$class)
vpiData$class <- gsub("Review", NA, vpiData$class)
vpiData$class <- gsub("None", NA, vpiData$class)
# Changing other columns to factors
#???? Timepoint isn't reading for some
#, species = factor(species) Taken from vpiData after timepoint, deleted species from select between timepoint and class
vpiData <- vpiData %>% mutate(Site = factor(Site), class = factor(class), timePoint = factor(timePoint)) %>%
select(Date, plot, timePoint, class, count)
vpiData <- vpiData1 %>%
tidyr::separate(filename, into=c("Date", "Site"),extra = 'merge',sep = "(?=T)") %>%
tidyr::separate(Date, into=c("remove", "Date"),sep = "../data/vpiData/") %>%
tidyr::separate(Site, into = c("Site", "delete"),sep = ".pqs") %>%
dplyr::select(-c(remove, delete)) %>%
mutate_if(is.character, str_replace_all, pattern = "_", replacement = "-") %>%
tidyr::separate(Date, into = c("Date", "remove"), sep = 10) %>%
dplyr::select(-remove) %>%
tidyr::separate(Site, into = c("Site", "Plot"), sep = "(?=plot)", extra = "merge") %>%
tidyr::separate(Site, into = c("Site", "Mark"), sep = "(?=mark)", extra = "merge") %>%
tidyr::separate(Plot, into = c("Plot", "Mark"), sep = "(?=mark)", extra = "merge" ) %>%
# tidyr::separate(Date, into = c("Plot", "remove"), sep = 5) %>%
dplyr::rename(abundance = `%`) %>%
tidyr::drop_na(abundance) %>%
arrange(desc(abundance))
vpiData <- vpiData1 %>%
tidyr::separate(filename, into=c("Date", "Site"),extra = 'merge',sep = "(?=T)") %>%
tidyr::separate(Date, into=c("remove", "Date"),sep = "../data/vpiData/") %>%
tidyr::separate(Site, into = c("Site", "delete"),sep = ".pqs") %>%
dplyr::select(-c(remove, delete)) %>%
mutate_if(is.character, str_replace_all, pattern = "_", replacement = "-") %>%
tidyr::separate(Date, into = c("Date", "remove"), sep = 10) %>%
dplyr::select(-remove) %>%
tidyr::separate(Site, into = c("Site", "Plot"), sep = "(?=plot)", extra = "merge") %>%
tidyr::separate(Site, into = c("Site", "Mark"), sep = "(?=mark)", extra = "merge") %>%
tidyr::separate(Plot, into = c("Plot", "Mark"), sep = "(?=mark)", extra = "merge" ) %>%
# tidyr::separate(Date, into = c("Plot", "remove"), sep = 5) %>%
dplyr::rename(abundance = `%`) %>%
tidyr::drop_na(abundance) %>%
arrange(desc(abundance))
# Making a column for Species using the length of each charactr in our Site Column. Note: we are doing this here before we turn that column into a factor below.
#vpiData$species <- if_else(nchar(vpiData$Site) <= 5, "ACER", "APAL" )
#### need to add if-else for control, outplant immediate, and outplant delay as well as cleaned vs uncleaned sites???
#vpiData$plot <- if_
#Changing the Date to factors
vpiData$Date<-as.factor(vpiData$Date)
vpiData$Date<-strptime(vpiData$Date,format="%Y-%m-%d") #defining what is the original format of your date
vpiData$Date<-as.Date(vpiData$Date,format="%Y-%m-%d")
#Making some corrections in the naming
#Commented out the other sites (T14)
vpiData$class <- gsub("Crustose coralline algae natans","Crustose coralline algae",vpiData$class)
vpiData$class <- gsub("Cordata", "Chordata", vpiData$class)
vpiData$class <- gsub("Rubble", "Bare Substrate", vpiData$class)
#vpiData$Site <- gsub("T-AP-14pt1", "T-AP-14", vpiData$Site)
#vpiData$Site <- gsub("T-AP-14pt2", "T-AP-14", vpiData$Site)
vpiData$class <- gsub("Other", NA, vpiData$class)
vpiData$class <- gsub("Review", NA, vpiData$class)
vpiData$class <- gsub("None", NA, vpiData$class)
# Changing other columns to factors
#???? Timepoint isn't reading for some
#, species = factor(species) Taken from vpiData after timepoint, deleted species from select between timepoint and class
vpiData <- vpiData %>% mutate(Site = factor(Site), class = factor(class), timePoint = factor(timePoint)) %>%
select(Date, Plot, timePoint, class, count)
levels(vpiData$Plot)
vpiData <- vpiData1 %>%
tidyr::separate(filename, into=c("Date", "Site"),extra = 'merge',sep = "(?=T)") %>%
tidyr::separate(Date, into=c("remove", "Date"),sep = "../data/vpiData/") %>%
tidyr::separate(Site, into = c("Site", "delete"),sep = ".pqs") %>%
dplyr::select(-c(remove, delete)) %>%
mutate_if(is.character, str_replace_all, pattern = "_", replacement = "-") %>%
tidyr::separate(Date, into = c("Date", "remove"), sep = 10) %>%
dplyr::select(-remove) %>%
tidyr::separate(Site, into = c("Site", "Plot"), sep = "(?=plot)", extra = "merge") %>%
tidyr::separate(Site, into = c("Site", "Mark"), sep = "(?=mark)", extra = "merge") %>%
tidyr::separate(Plot, into = c("Plot", "Mark"), sep = "(?=mark)", extra = "merge" ) %>%
# tidyr::separate(Date, into = c("Plot", "remove"), sep = 5) %>%
dplyr::rename(abundance = `%`) %>%
tidyr::drop_na(abundance) %>%
arrange(desc(abundance))
vpiData <- vpiData %>% mutate(Site = factor(Site), class = factor(class), timePoint = factor(timePoint)) %>%
select(Date, Plot, Mark, timePoint, class, count)
vpiData$Plot = if_else(vpiData$Mark %in% c("mark20-16", "mark48-50", "mark32-36"), "Plot 1",
if_else(vpiData$Mark %in% c("mark10-16", "mark50-30", "mark36-24"), "Plot 2"
if_else(vpiData$Mark %in% c("mark20-14", "mark30-46", "mark24-40"), "Plot 3"
vpiData$Plot = if_else(vpiData$Mark %in% c("mark20-16", "mark48-50", "mark32-36"), "Plot 1",
if_else(vpiData$Mark %in% c("mark10-16", "mark50-30", "mark36-24"), "Plot 2",
if_else(vpiData$Mark %in% c("mark20-14", "mark30-46", "mark24-40"), "Plot 3",
if_else(vpiData$Mark %in% c("mark14-8", "mark46-34", "mark40-38"), "Plot 4",
if_else(vpiData$Mark %in% c("mark8-12", "mark34-44", "mark38-30"), "Plot 5",
if_else(vpiData$Mark %in% c("mark12-26", "mark44-36", "mark30-34"), "Plot 6"
))))))
vpiData$Plot = if_else(vpiData$Mark %in% c("mark20-16", "mark48-50", "mark32-36"), "Plot 1",
if_else(vpiData$Mark %in% c("mark10-16", "mark50-30", "mark36-24"), "Plot 2",
if_else(vpiData$Mark %in% c("mark20-14", "mark30-46", "mark24-40"), "Plot 3",
if_else(vpiData$Mark %in% c("mark14-8", "mark46-34", "mark40-38"), "Plot 4",
if_else(vpiData$Mark %in% c("mark8-12", "mark34-44", "mark38-30"), "Plot 5",
if_else(vpiData$Mark %in% c("mark12-26", "mark44-36", "mark30-34"), "Plot 6"
, ""))))))
head (vpiData)
vpiData$Plot = if_else(vpiData$Mark %in% c("mark16-20", "mark48-50", "mark32-36"), "Plot 1",
if_else(vpiData$Mark %in% c("mark10-16", "mark50-30", "mark36-24"), "Plot 2",
if_else(vpiData$Mark %in% c("mark20-14", "mark30-46", "mark24-40"), "Plot 3",
if_else(vpiData$Mark %in% c("mark14-8", "mark46-34", "mark40-38"), "Plot 4",
if_else(vpiData$Mark %in% c("mark8-12", "mark34-44", "mark38-30"), "Plot 5",
if_else(vpiData$Mark %in% c("mark12-26", "mark44-36", "mark30-34"), "Plot 6"
, ""))))))
head (vpiData)
knitr::opts_chunk$set(warning = FALSE, fig.align = 'left')
library(magrittr)
if (!require("pacman")) install.packages("pacman")
pacman::p_load("ggplot2","officer","ggpubr", "rcompanion", "RColorBrewer", "patchwork", "magrittr","reshape2", "stringr", "plyr", "dplyr", "flextable", "tidyr", "tibble", "vegan", "forcats", "readr", "metafolio", "FSA","viridis", "paletteer", "purrr", "data.table", "ecodist", "glue")
pacman::p_load_gh("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
read_plus <- function(flnm) {
read_csv(flnm) %>%
mutate(filename = flnm)
}
vpiData1 <-
list.files(path = "../data/vpiData", pattern = "*.csv",
full.names = T) %>%
map_dfr(~read_plus(.))
#Sort out data to have proper columns for all the info i want, this might need to be changed to figure out the Marks vs Plot thing
vpiData <- vpiData1 %>%
tidyr::separate(filename, into=c("Date", "Site"),extra = 'merge',sep = "(?=T)") %>%
tidyr::separate(Date, into=c("remove", "Date"),sep = "../data/vpiData/") %>%
tidyr::separate(Site, into = c("Site", "delete"),sep = ".pqs") %>%
dplyr::select(-c(remove, delete)) %>%
mutate_if(is.character, str_replace_all, pattern = "_", replacement = "-") %>%
tidyr::separate(Date, into = c("Date", "remove"), sep = 10) %>%
dplyr::select(-remove) %>%
tidyr::separate(Site, into = c("Site", "Plot"), sep = "(?=plot)", extra = "merge") %>%
tidyr::separate(Site, into = c("Site", "Mark"), sep = "(?=mark)", extra = "merge") %>%
tidyr::separate(Plot, into = c("Plot", "Mark"), sep = "(?=mark)", extra = "merge" ) %>%
# tidyr::separate(Date, into = c("Plot", "remove"), sep = 5) %>%
dplyr::rename(abundance = `%`) %>%
tidyr::drop_na(abundance) %>%
arrange(desc(abundance))
# Making a column for Species using the length of each charactr in our Site Column. Note: we are doing this here before we turn that column into a factor below.
#vpiData$species <- if_else(nchar(vpiData$Site) <= 5, "ACER", "APAL" )
#### need to add if-else for control, outplant immediate, and outplant delay as well as cleaned vs uncleaned sites???
#vpiData$plot <- if_
#Changing the Date to factors
vpiData$Date<-as.factor(vpiData$Date)
vpiData$Date<-strptime(vpiData$Date,format="%Y-%m-%d") #defining what is the original format of your date
vpiData$Date<-as.Date(vpiData$Date,format="%Y-%m-%d")
#Making some corrections in the naming
#Commented out the other sites (T14)
vpiData$class <- gsub("Crustose coralline algae natans","Crustose coralline algae",vpiData$class)
vpiData$class <- gsub("Cordata", "Chordata", vpiData$class)
vpiData$class <- gsub("Rubble", "Bare Substrate", vpiData$class)
#vpiData$Site <- gsub("T-AP-14pt1", "T-AP-14", vpiData$Site)
#vpiData$Site <- gsub("T-AP-14pt2", "T-AP-14", vpiData$Site)
vpiData$class <- gsub("Other", NA, vpiData$class)
vpiData$class <- gsub("Review", NA, vpiData$class)
vpiData$class <- gsub("None", NA, vpiData$class)
# Changing other columns to factors
#???? Timepoint isn't reading for some
#, species = factor(species) Taken from vpiData after timepoint, deleted species from select between timepoint and class
vpiData <- vpiData %>% mutate(Site = factor(Site), class = factor(class), timePoint = factor(timePoint)) %>%
select(Date, Plot, Mark, timePoint, class, count)
#commented out to get 20mo to include which worked but didn't down the line
# vpiData$timePoint = factor(vpiData$timePoint, levels(vpiData$timePoint)[c(2,1)])
vpiData
#Created if else statement to assign marks to plot numbers
vpiData$Plot = if_else(vpiData$Mark %in% c("mark16-20", "mark48-50", "mark32-36"), "Plot 1",
if_else(vpiData$Mark %in% c("mark10-16", "mark50-30", "mark36-24"), "Plot 2",
if_else(vpiData$Mark %in% c("mark20-14", "mark30-46", "mark24-40"), "Plot 3",
if_else(vpiData$Mark %in% c("mark14-8", "mark46-34", "mark40-38"), "Plot 4",
if_else(vpiData$Mark %in% c("mark8-12", "mark34-44", "mark38-30"), "Plot 5",
if_else(vpiData$Mark %in% c("mark12-26", "mark44-36", "mark30-34"), "Plot 6"
, ""))))))
head (vpiData)
View(vpiData)
vpiData2 <- vpiData %>%
dplyr::filter(class != c("NA")) %>%
droplevels() %>%
group_by(Plot, timePoint,  class) %>%
summarise(count = sum(count)) %>%
group_by(Plot,timePoint) %>%
mutate(totalObservations = sum(count, na.rm = TRUE)) %>%
group_by(Plot,timePoint, class) %>%
mutate(abundance = ((count/totalObservations)*100)) %>%
select(-c(totalObservations))
vpiData2 <- data.table(vpiData2)
vpiData2[, `:=`(class, reorder(class, abundance))]
# vpiData2$class <- drop_na(vpiData2$class)
vpiStack3<- ggplot(vpiData3, aes(x = timePoint, y = abundance))+
geom_bar(aes(fill = factor(class)), position = position_stack(reverse = FALSE), stat = 'identity', color = 'black', alpha = 0.8)+
ylim(0,100)+
labs(y = "Relative Abundance (%)", fill = "Class", title = "Relative Species Abundance > 2%")+
scale_x_discrete(labels = c("Baseline", "12 Month"))+
#scale_y_reverse()+
facet_wrap(.~Site, scales = 'free')
vpiData3 <- vpiData2 %>%
filter(abundance > 1) %>%
droplevels() %>%
arrange(desc(abundance))
vpiStack <- vpiStack3+theme(
axis.text.x = element_text(size = 15, colour = "black", vjust = 0.5, hjust = 0.5, face= "bold"),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 40, face = "bold"),
axis.text.y = element_text(colour = "black", size = 30, face = "bold"),
legend.title = element_text(size = 40, face = "bold"),
legend.text = element_text(size = 36, face = "bold", colour = "black"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(size = 40, face = "bold"),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=40, color="black"),
legend.position = "right")
# myColors <- paletteer_c("harrypotter::gryffindor", 6, direction = 1 )
#myColors <- paletteer_c("pals::ocean.balance", 6, direction = 1)
#Color Palette using a selection of Mote's preferred colors
# myColors <- c("#d2232a", "#ca581f", "#f26522", "#85b034", "#00ae9d", "#78779e")
# Using this just to plot the top 1% of species, REMOVE site filter (T-AP-12) WHEN COMPLETE
#   , Site != c("T-AP-12") removed after abundance
vpiData3 <- vpiData2 %>%
filter(abundance > 1) %>%
droplevels() %>%
arrange(desc(abundance))
# vpiData1$class = factor(vpiData1$class, levels(vpiData1$class)[c(2,6,3,4,5,1)])
#need to add 20 months
vpiStack3<- ggplot(vpiData3, aes(x = timePoint, y = abundance))+
geom_bar(aes(fill = factor(class)), position = position_stack(reverse = FALSE), stat = 'identity', color = 'black', alpha = 0.8)+
ylim(0,100)+
labs(y = "Relative Abundance (%)", fill = "Class", title = "Relative Species Abundance > 2%")+
scale_x_discrete(labels = c("Baseline", "12 Month"))+
#scale_y_reverse()+
facet_wrap(.~Site, scales = 'free')
vpiStack <- vpiStack3+theme(
axis.text.x = element_text(size = 15, colour = "black", vjust = 0.5, hjust = 0.5, face= "bold"),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 40, face = "bold"),
axis.text.y = element_text(colour = "black", size = 30, face = "bold"),
legend.title = element_text(size = 40, face = "bold"),
legend.text = element_text(size = 36, face = "bold", colour = "black"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(size = 40, face = "bold"),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=40, color="black"),
legend.position = "right")
vpiStack
# myColors <- paletteer_c("harrypotter::gryffindor", 6, direction = 1 )
#myColors <- paletteer_c("pals::ocean.balance", 6, direction = 1)
#Color Palette using a selection of Mote's preferred colors
# myColors <- c("#d2232a", "#ca581f", "#f26522", "#85b034", "#00ae9d", "#78779e")
# Using this just to plot the top 1% of species, REMOVE site filter (T-AP-12) WHEN COMPLETE
#   , Site != c("T-AP-12") removed after abundance
vpiData3 <- vpiData2 %>%
filter(abundance > 1) %>%
droplevels() %>%
arrange(desc(abundance))
# vpiData1$class = factor(vpiData1$class, levels(vpiData1$class)[c(2,6,3,4,5,1)])
#need to add 20 months
vpiStack3<- ggplot(vpiData3, aes(x = timePoint, y = abundance))+
geom_bar(aes(fill = factor(class)), position = position_stack(reverse = FALSE), stat = 'identity', color = 'black', alpha = 0.8)+
ylim(0,100)+
labs(y = "Relative Abundance (%)", fill = "Class", title = "Relative Species Abundance > 2%")+
scale_x_discrete(labels = c("Baseline", "12 Month"))+
#scale_y_reverse()+
facet_wrap(.~Plot, scales = 'free')
vpiStack <- vpiStack3+theme(
axis.text.x = element_text(size = 15, colour = "black", vjust = 0.5, hjust = 0.5, face= "bold"),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 40, face = "bold"),
axis.text.y = element_text(colour = "black", size = 30, face = "bold"),
legend.title = element_text(size = 40, face = "bold"),
legend.text = element_text(size = 36, face = "bold", colour = "black"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(size = 40, face = "bold"),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=40, color="black"),
legend.position = "right")
vpiStack
#ggsave("../figures/vpiStackBar.png", plot = vpiStack, width = 20, height = 15, units = 'in', dpi = 600)
#ggsave("../figures/nfwfReportFig2.png", plot = vpiStack, width = 20, height = 15, units = "in", dpi = 600)
# myColors <- paletteer_c("harrypotter::gryffindor", 6, direction = 1 )
#myColors <- paletteer_c("pals::ocean.balance", 6, direction = 1)
#Color Palette using a selection of Mote's preferred colors
# myColors <- c("#d2232a", "#ca581f", "#f26522", "#85b034", "#00ae9d", "#78779e")
# Using this just to plot the top 1% of species, REMOVE site filter (T-AP-12) WHEN COMPLETE
#   , Site != c("T-AP-12") removed after abundance
vpiData3 <- vpiData2 %>%
filter(abundance > 1) %>%
droplevels() %>%
arrange(desc(abundance))
# vpiData1$class = factor(vpiData1$class, levels(vpiData1$class)[c(2,6,3,4,5,1)])
#need to add 20 months
vpiStack3<- ggplot(vpiData3, aes(x = timePoint, y = abundance))+
geom_bar(aes(fill = factor(class)), position = position_stack(reverse = FALSE), stat = 'identity', color = 'black', alpha = 0.8)+
ylim(0,100)+
labs(y = "Relative Abundance (%)", fill = "Class", title = "Relative Species Abundance > 2%")+
scale_x_discrete(labels = c("Baseline", "12 Month", "20 Month"))+
#scale_y_reverse()+
facet_wrap(.~Plot, scales = 'free')
vpiStack <- vpiStack3+theme(
axis.text.x = element_text(size = 15, colour = "black", vjust = 0.5, hjust = 0.5, face= "bold"),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 40, face = "bold"),
axis.text.y = element_text(colour = "black", size = 20, face = "bold"),
legend.title = element_text(size = 40, face = "bold"),
legend.text = element_text(size = 20, face = "bold", colour = "black"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(size = 40, face = "bold"),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=20, color="black"),
legend.position = "right")
vpiStack
#ggsave("../figures/vpiStackBar.png", plot = vpiStack, width = 20, height = 15, units = 'in', dpi = 600)
#ggsave("../figures/nfwfReportFig2.png", plot = vpiStack, width = 20, height = 15, units = "in", dpi = 600)
# myColors <- paletteer_c("harrypotter::gryffindor", 6, direction = 1 )
#myColors <- paletteer_c("pals::ocean.balance", 6, direction = 1)
#Color Palette using a selection of Mote's preferred colors
# myColors <- c("#d2232a", "#ca581f", "#f26522", "#85b034", "#00ae9d", "#78779e")
# Using this just to plot the top 1% of species, REMOVE site filter (T-AP-12) WHEN COMPLETE
#   , Site != c("T-AP-12") removed after abundance
vpiData3 <- vpiData2 %>%
filter(abundance > 0.5) %>%
droplevels() %>%
arrange(desc(abundance))
# vpiData1$class = factor(vpiData1$class, levels(vpiData1$class)[c(2,6,3,4,5,1)])
#need to add 20 months
vpiStack3<- ggplot(vpiData3, aes(x = timePoint, y = abundance))+
geom_bar(aes(fill = factor(class)), position = position_stack(reverse = FALSE), stat = 'identity', color = 'black', alpha = 0.8)+
ylim(0,100)+
labs(y = "Relative Abundance (%)", fill = "Class", title = "Relative Species Abundance > 0.5%")+
scale_x_discrete(labels = c("Baseline", "12 Month", "20 Month"))+
#scale_y_reverse()+
facet_wrap(.~Plot, scales = 'free')
vpiStack <- vpiStack3+theme(
axis.text.x = element_text(size = 15, colour = "black", vjust = 0.5, hjust = 0.5, face= "bold"),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 40, face = "bold"),
axis.text.y = element_text(colour = "black", size = 20, face = "bold"),
legend.title = element_text(size = 40, face = "bold"),
legend.text = element_text(size = 20, face = "bold", colour = "black"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(size = 40, face = "bold"),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=20, color="black"),
legend.position = "right")
vpiStack
#ggsave("../figures/vpiStackBar.png", plot = vpiStack, width = 20, height = 15, units = 'in', dpi = 600)
#ggsave("../figures/nfwfReportFig2.png", plot = vpiStack, width = 20, height = 15, units = "in", dpi = 600)
# removed { species,}
vpiData2 <- vpiData %>%
dplyr::filter(class != c("NA")) %>%
droplevels() %>%
group_by(Plot, timePoint,  class) %>%
summarise(count = sum(count)) %>%
group_by(Plot,timePoint) %>%
mutate(totalObservations = sum(count, na.rm = TRUE)) %>%
group_by(Plot,timePoint, class) %>%
mutate(abundance = ((count/totalObservations)*100)) %>%
select(-c(totalObservations))
vpiData2 <- data.table(vpiData2)
vpiData2[, `:=`(class, reorder(class, abundance))]
# vpiData2$class <- drop_na(vpiData2$class)
vpiData2 <- vpiData2 %>% filter(class != "Bare Substrate")
# myColors <- paletteer_c("harrypotter::gryffindor", 6, direction = 1 )
#myColors <- paletteer_c("pals::ocean.balance", 6, direction = 1)
#Color Palette using a selection of Mote's preferred colors
# myColors <- c("#d2232a", "#ca581f", "#f26522", "#85b034", "#00ae9d", "#78779e")
# Using this just to plot the top 1% of species, REMOVE site filter (T-AP-12) WHEN COMPLETE
#   , Site != c("T-AP-12") removed after abundance
vpiData3 <- vpiData2 %>%
filter(abundance > 0.5) %>%
droplevels() %>%
arrange(desc(abundance))
# vpiData1$class = factor(vpiData1$class, levels(vpiData1$class)[c(2,6,3,4,5,1)])
#need to add 20 months
vpiStack3<- ggplot(vpiData3, aes(x = timePoint, y = abundance))+
geom_bar(aes(fill = factor(class)), position = position_stack(reverse = FALSE), stat = 'identity', color = 'black', alpha = 0.8)+
ylim(0,100)+
labs(y = "Relative Abundance (%)", fill = "Class", title = "Relative Species Abundance > 0.5%")+
scale_x_discrete(labels = c("Baseline", "12 Month", "20 Month"))+
#scale_y_reverse()+
facet_wrap(.~Plot, scales = 'free')
vpiStack <- vpiStack3+theme(
axis.text.x = element_text(size = 15, colour = "black", vjust = 0.5, hjust = 0.5, face= "bold"),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 40, face = "bold"),
axis.text.y = element_text(colour = "black", size = 20, face = "bold"),
legend.title = element_text(size = 40, face = "bold"),
legend.text = element_text(size = 20, face = "bold", colour = "black"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.background = element_rect(fill = '#F5F5F5'),
plot.title = element_text(size = 40, face = "bold"),
axis.line = element_line(colour = "black"),
axis.ticks = element_line(color="black"),
text = element_text(size=20, color="black"),
legend.position = "right")
vpiStack
#ggsave("../figures/vpiStackBar.png", plot = vpiStack, width = 20, height = 15, units = 'in', dpi = 600)
#ggsave("../figures/nfwfReportFig2.png", plot = vpiStack, width = 20, height = 15, units = "in", dpi = 600)
